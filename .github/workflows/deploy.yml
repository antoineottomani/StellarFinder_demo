name: Deploy Stellar Finder to Elastic Beanstalk

on:
  push:
    branches:
      - demo

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      EB_APP_NAME: ${{ secrets.EB_APPLICATION_NAME }}
      EB_ENV_NAME: ${{ secrets.EB_ENVIRONMENT_NAME }}
      IMAGE_TAG: latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EB CLI
        run: |
          pip install --user awsebcli
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build --no-cache -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Tag Docker image
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push to Amazon ECR
        run: |
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Generate Dockerrun.aws.json
        run: |
          echo '{
            "AWSEBDockerrunVersion": 2,
            "Image": {
              "Name": "'${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${IMAGE_TAG}'",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": 8000
              }
            ]
          }' > Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        run: |
          eb use $EB_ENV_NAME
          eb deploy
